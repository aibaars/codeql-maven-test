name: CodeQL

# Controls when the workflow will run
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:
    inputs:
      repository:
        description: 'GitHub repository'
        required: false
        default: apache/commons-io

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup maven repository
        run: |
          sudo apt install -y nginx
          htpasswd -cb "$RUNNER_TEMP/.htpasswd" maven maven
          openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout gradle.org.key -out gradle.org.crt -batch -subj '/CN=services.gradle.org' \
            -addext 'subjectAltName = DNS:services.gradle.org, DNS:api.foojay.io, DNS:cdn.azul.com' \
            -addext 'certificatePolicies = 1.2.3.4'
          cp gradle.org.key gradle.org.crt "$RUNNER_TEMP/"
          envsubst '$RUNNER_TEMP' < nginx.conf.templ > "$RUNNER_TEMP/nginx.conf"
          sudo nginx -c "$RUNNER_TEMP/nginx.conf"
      - name: Build docker image
        run: |
          docker network create --internal no-internet
          docker build -t image --build-arg "github_token=${{ github.token }}" .

      - uses: actions/checkout@v4
        with:
          path: repo
          repository: ${{ inputs.repository || 'apache/commons-io' }}

      - name: Run analysis
        run: |
          mkdir out
          docker run --network no-internet -v ./repo:/repo -v ./out:/out  \
          --add-host=maven.example.com:172.17.0.1 \
          --add-host=services.gradle.org:172.17.0.1 \
          image bash -c "gh codeql database create -l java --build-mode none -s /repo /out/database"
          sudo chmod -R +rX out

      - name: Upload database
        uses: actions/upload-artifact@v4
        with:
          path: out
          name: database

      - name: Print nginx logs
        run: |
          cat "${RUNNER_TEMP}/access.log"
          cat "${RUNNER_TEMP}/error.log"
          cat /var/log/nginx/error.log